
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  nombre: 'nombre',
  apellido: 'apellido',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  direccion: 'direccion',
  telefono: 'telefono',
  localidadId: 'localidadId'
};

exports.Prisma.LocalidadScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  codPostal: 'codPostal',
  provinciaId: 'provinciaId'
};

exports.Prisma.ProvinciaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.ProductoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  precio: 'precio',
  stock: 'stock',
  foto: 'foto',
  categoriaId: 'categoriaId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.VentaScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  montoTotal: 'montoTotal',
  clienteId: 'clienteId'
};

exports.Prisma.LineaVentaScalarFieldEnum = {
  id: 'id',
  ventaId: 'ventaId',
  productoId: 'productoId',
  cantidad: 'cantidad',
  subTotal: 'subTotal'
};

exports.Prisma.PagoScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  monto: 'monto',
  ventaId: 'ventaId',
  metodoPagoId: 'metodoPagoId'
};

exports.Prisma.MetodoPagoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  nombre: 'nombre',
  apellido: 'apellido',
  password: 'password'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.ClienteOrderByRelevanceFieldEnum = {
  direccion: 'direccion',
  telefono: 'telefono'
};

exports.Prisma.LocalidadOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  codPostal: 'codPostal'
};

exports.Prisma.ProvinciaOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};

exports.Prisma.ProductoOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion',
  foto: 'foto'
};

exports.Prisma.CategoriaOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};

exports.Prisma.MetodoPagoOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  User: 'User',
  Cliente: 'Cliente',
  Localidad: 'Localidad',
  Provincia: 'Provincia',
  Producto: 'Producto',
  Categoria: 'Categoria',
  Venta: 'Venta',
  LineaVenta: 'LineaVenta',
  Pago: 'Pago',
  MetodoPago: 'MetodoPago'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Martín Ratti\\Desktop\\PCFIX\\pcfix-backend\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "deno"
    ],
    "sourceFilePath": "C:\\Users\\Martín Ratti\\Desktop\\PCFIX\\pcfix-backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"deno\"]\n  output          = \"../generated/client\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id       Int      @id @default(autoincrement())\n  email    String   @unique\n  nombre   String\n  apellido String\n  password String // Guardaremos el hash, no la contraseña en texto plano\n  role     Role     @default(USER)\n  cliente  Cliente?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Cliente {\n  id          Int        @id @default(autoincrement())\n  userId      Int        @unique\n  user        User       @relation(fields: [userId], references: [id])\n  direccion   String?\n  telefono    String?\n  localidadId Int?\n  localidad   Localidad? @relation(fields: [localidadId], references: [id])\n  ventas      Venta[]\n}\n\nmodel Localidad {\n  id          Int       @id @default(autoincrement())\n  nombre      String\n  codPostal   String\n  provinciaId Int\n  provincia   Provincia @relation(fields: [provinciaId], references: [id])\n  clientes    Cliente[]\n}\n\nmodel Provincia {\n  id          Int         @id @default(autoincrement())\n  nombre      String      @unique\n  localidades Localidad[]\n}\n\nmodel Producto {\n  id          Int          @id @default(autoincrement())\n  nombre      String\n  descripcion String       @db.Text\n  precio      Decimal      @db.Decimal(10, 2)\n  stock       Int\n  foto        String?\n  categoriaId Int\n  categoria   Categoria    @relation(fields: [categoriaId], references: [id])\n  lineasVenta LineaVenta[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Categoria {\n  id        Int        @id @default(autoincrement())\n  nombre    String     @unique\n  productos Producto[]\n}\n\nmodel Venta {\n  id          Int          @id @default(autoincrement())\n  fecha       DateTime     @default(now())\n  montoTotal  Decimal      @db.Decimal(10, 2)\n  clienteId   Int\n  cliente     Cliente      @relation(fields: [clienteId], references: [id])\n  lineasVenta LineaVenta[]\n  pagos       Pago[]\n}\n\nmodel LineaVenta {\n  id         Int      @id @default(autoincrement())\n  ventaId    Int\n  venta      Venta    @relation(fields: [ventaId], references: [id])\n  productoId Int\n  producto   Producto @relation(fields: [productoId], references: [id])\n  cantidad   Int\n  subTotal   Decimal  @db.Decimal(10, 2)\n\n  @@unique([ventaId, productoId]) // Evita duplicados del mismo producto en una venta\n}\n\nmodel Pago {\n  id           Int        @id @default(autoincrement())\n  fecha        DateTime   @default(now())\n  monto        Decimal    @db.Decimal(10, 2)\n  ventaId      Int\n  venta        Venta      @relation(fields: [ventaId], references: [id])\n  metodoPagoId Int\n  metodoPago   MetodoPago @relation(fields: [metodoPagoId], references: [id])\n}\n\nmodel MetodoPago {\n  id     Int    @id @default(autoincrement())\n  nombre String @unique\n  pagos  Pago[]\n}\n\nenum Role {\n  USER\n  ADMIN\n}\n",
  "inlineSchemaHash": "d5c125bd9a131f5e9bd76740cfdff7c489c830486a24260a0c2030322ade2cfc",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"cliente\",\"kind\":\"object\",\"type\":\"Cliente\",\"relationName\":\"ClienteToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Cliente\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClienteToUser\"},{\"name\":\"direccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"localidadId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"localidad\",\"kind\":\"object\",\"type\":\"Localidad\",\"relationName\":\"ClienteToLocalidad\"},{\"name\":\"ventas\",\"kind\":\"object\",\"type\":\"Venta\",\"relationName\":\"ClienteToVenta\"}],\"dbName\":null},\"Localidad\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codPostal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provinciaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provincia\",\"kind\":\"object\",\"type\":\"Provincia\",\"relationName\":\"LocalidadToProvincia\"},{\"name\":\"clientes\",\"kind\":\"object\",\"type\":\"Cliente\",\"relationName\":\"ClienteToLocalidad\"}],\"dbName\":null},\"Provincia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"localidades\",\"kind\":\"object\",\"type\":\"Localidad\",\"relationName\":\"LocalidadToProvincia\"}],\"dbName\":null},\"Producto\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"precio\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoriaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoria\",\"kind\":\"object\",\"type\":\"Categoria\",\"relationName\":\"CategoriaToProducto\"},{\"name\":\"lineasVenta\",\"kind\":\"object\",\"type\":\"LineaVenta\",\"relationName\":\"LineaVentaToProducto\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Categoria\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productos\",\"kind\":\"object\",\"type\":\"Producto\",\"relationName\":\"CategoriaToProducto\"}],\"dbName\":null},\"Venta\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"montoTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"clienteId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cliente\",\"kind\":\"object\",\"type\":\"Cliente\",\"relationName\":\"ClienteToVenta\"},{\"name\":\"lineasVenta\",\"kind\":\"object\",\"type\":\"LineaVenta\",\"relationName\":\"LineaVentaToVenta\"},{\"name\":\"pagos\",\"kind\":\"object\",\"type\":\"Pago\",\"relationName\":\"PagoToVenta\"}],\"dbName\":null},\"LineaVenta\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ventaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"venta\",\"kind\":\"object\",\"type\":\"Venta\",\"relationName\":\"LineaVentaToVenta\"},{\"name\":\"productoId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"producto\",\"kind\":\"object\",\"type\":\"Producto\",\"relationName\":\"LineaVentaToProducto\"},{\"name\":\"cantidad\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"}],\"dbName\":null},\"Pago\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"monto\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ventaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"venta\",\"kind\":\"object\",\"type\":\"Venta\",\"relationName\":\"PagoToVenta\"},{\"name\":\"metodoPagoId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metodoPago\",\"kind\":\"object\",\"type\":\"MetodoPago\",\"relationName\":\"MetodoPagoToPago\"}],\"dbName\":null},\"MetodoPago\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pagos\",\"kind\":\"object\",\"type\":\"Pago\",\"relationName\":\"MetodoPagoToPago\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

